version: '2.1'
services:
  graph-controller:
    image: registry.gitlab.com/mnemotix/synaptix/synaptix-graph-controller:0.1.8-SNAPSHOT
    container_name: ${COMPOSE_PROJECT_NAME}-graph-controller
    external_links:
      - ${COMPOSE_PROJECT_NAME}-rabbitmq
    volumes:
      - ${DATA_PATH}/synaptix/logs:/opt/docker/logs
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PWD=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_DURABLE_MESSAGES=false
      - RABBITMQ_TIMEOUT=${RABBITMQ_TIMEOUT}
      - RABBITMQ_EXCHANGE_NAME=${COMPOSE_PROJECT_NAME}
      - RDFSTORE_USER=${RDFSTORE_USER}
      - RDFSTORE_PWD=${RDFSTORE_PWD}
      - RDFSTORE_ROOT_URI=${RDFSTORE_ROOT_URI}
      - RDFSTORE_REPOSITORY_NAME=${RDFSTORE_REPOSITORY_NAME}
      - RDFSTORE_READ_ENDPOINT=
      - RDFSTORE_WRITE_ENDPOINT=statements
    networks:
      - oep

  index-controller:
    image: registry.gitlab.com/mnemotix/synaptix/synaptix-index-controller:0.1.9-SNAPSHOT
    container_name: ${COMPOSE_PROJECT_NAME}-index-controller
    external_links:
      - ${COMPOSE_PROJECT_NAME}-rabbitmq
    volumes:
      - ${DATA_PATH}/synaptix/logs:/opt/docker/logs
    depends_on:
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PWD=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_DURABLE_MESSAGES=false
      - RABBITMQ_TIMEOUT=${RABBITMQ_TIMEOUT}
      - RABBITMQ_EXCHANGE_NAME=${COMPOSE_PROJECT_NAME}
      - SYNAPTIX_LOG_LEVEL=${SYNAPTIX_LOG_LEVEL}
      - ES_MASTER_URI=${ES_MASTER_URI}
      - ES_CLUSTER_USER=${ES_CLUSTER_USER}
      - ES_CLUSTER_PWD=${ES_CLUSTER_PWD}
    networks:
      - oep
networks:
  oep:
    driver: bridge
